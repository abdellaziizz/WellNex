rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow read/write access on all documents for authenticated users
    match /{document=**} {
      allow read, write: if request.auth != null;
    }

    // Allow authenticated users to create their initial profile
    match /users/{userId} {
      // Allow creation if the user is authenticated and the userId matches their auth ID
      allow create: if request.auth != null && request.auth.uid == userId;
      // Allow read/update/delete if the user owns the document
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      
      // Allow access to all subcollections if the user owns the parent document
      match /{subcollection}/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Diet plans subcollection
      match /dietPlans/{planId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Health metrics subcollection
      match /healthMetrics/{metricId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Profile subcollection
      match /profile/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Health plans subcollection
      match /healthPlans/{planId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Allow public read access to certain collections if needed
    match /publicData/{document=**} {
      allow read: if true;
    }

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Match users collection
    match /users/{userId} {
      // Allow read/write if user is authenticated and accessing their own document
      allow read, write: if isOwner(userId);
      
      // Match dietPlans subcollection
      match /dietPlans/{planId} {
        allow read, write: if isOwner(userId);
      }
      
      // Match healthPlans subcollection
      match /healthPlans/{planId} {
        allow read, write: if isOwner(userId);
      }
    }
  }
}